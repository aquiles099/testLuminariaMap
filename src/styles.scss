// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$front-primary: mat.define-palette(mat.$indigo-palette);
$front-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$front-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$front-theme: mat.define-light-theme((
  color: (
    primary: $front-primary,
    accent: $front-accent,
    warn: $front-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($front-theme);

/* You can add global styles to this file, and also import other style files */
/* Custom Bootstrap SCSS. */
@import "./assets/styles/custom";
/* System variables */
@import './assets/styles/variable';
/* Importing Bootstrap SCSS file. */
@import '~bootstrap/scss/bootstrap';
/* Custom Swal2 */
 @import './assets/styles/swal2';
/* Fonts Family */
@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,400;0,500;0,700;0,900;1,300;1,400;1,500;1,700;1,900&display=swap');

body {
  font-family: 'Roboto', sans-serif;
  color: var(--color-text);
  height: 100vh !important;
  margin: 0;
  overflow: hidden;
}

.map-container {
  overflow: hidden !important;
  width: 100%;
  height: 100%;
}

.leaflet-popup-close-button {
  display: none;
}
